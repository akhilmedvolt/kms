name: Udaan API Workflows Deployment

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Gen AI Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: logiclens2024/udaan-backend-test:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Deploy to server
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        password: ${{ secrets.SERVER_PASSWORD }}
        script: |
          set -e  # Exit on any error
          
          # Log in to Docker Hub
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          
          # Pull the latest Gen AI image
          docker pull logiclens2024/udaan-backend-test:latest
          
          # Check and free port 12000
          echo "Checking for processes or containers on port 12000..."
          PID=$(sudo lsof -t -i:12000) || true
          if [ -n "$PID" ]; then
            echo "Killing process $PID on port 12000..."
            sudo kill -9 $PID || true
          fi

          PORT_CONTAINER_ID=$(docker ps -q --filter "publish=12000") || true
          if [ -n "$PORT_CONTAINER_ID" ]; then
            echo "Stopping and removing container $PORT_CONTAINER_ID on port 12000..."
            docker stop $PORT_CONTAINER_ID || true
            docker rm $PORT_CONTAINER_ID || true
          fi
  
          # Run the Gen AI container
          echo "Starting new container..."
          docker run -d \
            --name udaan-backend \
            -e JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }} \
            -e EMAIL_VERIFICATION_SECRET_KEY=${{ secrets.EMAIL_VERIFICATION_SECRET_KEY }} \
            -e ACCESS_TOKEN_EXPIRE_MINUTES=${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }} \
            -e DATABASE_URL=${{ secrets.DATABASE_URL }} \
            -e MAIL_USERNAME=${{ secrets.MAIL_USERNAME }} \
            -e MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }} \
            -e MAIL_FROM=${{ secrets.MAIL_FROM }} \
            -e MAIL_PORT=${{ secrets.MAIL_PORT }} \
            -e MAIL_SERVER=${{ secrets.MAIL_SERVER }} \
            -e MAIL_TLS=${{ secrets.MAIL_TLS }} \
            -e MAIL_SSL=${{ secrets.MAIL_SSL }} \
            -e MAIL_FROM_NAME=${{ secrets.MAIL_FROM_NAME }} \
            -p 12000:12000 \
            logiclens2024/udaan-backend-test:latest
